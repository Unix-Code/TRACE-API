@model TRACE_API.Models.Report

@{
    var CourseFullTitle = Model.Term.NormalizedTitle + " - " + Model.FullCourseName;
    ViewBag.Title = CourseFullTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<section id="content">
    <h1 class="sr-only">Home</h1>


    <span class="activate-tour-test hidden">false</span>


    @*CSS Reminder: Abstract the flex-col class in the CSS*@


    <div class="layout-fluid padded portlet-padded container-xl extended dashboard" id="main-content" role="main">
        <div class="row flex-row">

            <div class="flex-col-12 portlet-column portlet-column-last" id="courseInfo" style="width: 680px;">
                <div class="portlet-dropzone portlet-column-content portlet-column-content-only" id="layout-column_column-12">
                    <div class="portlet-boundary portlet-static portlet-static-end portlet-barebone ">
                        <section class="portlet">
                            <div class="portlet-content">
                                <div class=" portlet-content-container">
                                    <div class="portlet-body">
                                        <div class="cards-container">
                                            <div class="container-header mobile-collapse">
                                                <h2 class="title">@CourseFullTitle</h2>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </div>
                </div>
            </div>

            <div class="flex-col-12 portlet-column portlet-column-last" id="courseInfo" style="width: 680px;">
                <div class="portlet-dropzone portlet-column-content portlet-column-content-only" id="layout-column_column-12">
                    <div class="portlet-boundary portlet-static portlet-static-end portlet-barebone ">
                        <section class="portlet">
                            <div class="portlet-content">
                                <div class=" portlet-content-container">
                                    <div class="portlet-body">
                                        <div class="cards-container">
                                            <div class="container-header mobile-collapse">
                                                <h2 class="title">Course Information</h2>
                                            </div>
                                            <div class="container-body">
                                                <div class="dashboard-portlet">
                                                    <div id="courseInfoContent">
                                                        <h4>Instructor Name : @Model.Instructor.FullName</h4>
                                                        <h4>Course ID : @Model.CourseID @Model.Section</h4>
                                                        <h4 id="data_input"></h4>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </div>
                </div>
            </div>

            <div class="flex-col-5 portlet-column portlet-column-last" id="column-5">
                <div class="portlet-dropzone portlet-column-content portlet-column-content-only" id="layout-column_column-6">
                    <div class="portlet-boundary portlet-static portlet-static-end portlet-barebone ">
                        <section class="portlet">
                            <div class="portlet-content">
                                <div class=" portlet-content-container">
                                    <div class="portlet-body">
                                        <div class="cards-container">
                                            <div class="container-header mobile-collapse">
                                                <h2 id="feed-title" class="title">Hours Spent Per Week</h2>
                                            </div>
                                            <div class="container-body">
                                                <div class="dashboard-portlet">
                                                    <div class="chart-container" style="position: relative; height:85%; width:auto">
                                                        <canvas id="demoChart" style="padding:10px; margin-top: 20px;"></canvas>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </div>
                </div>
            </div>

            <div class="flex-col-12 portlet-column portlet-column-last" id="courseRelatedQuestions" style="width: 1020px;">
                <div class="portlet-dropzone portlet-column-content portlet-column-content-only" id="layout-column_column-12">
                    <div class="portlet-boundary portlet-static portlet-static-end portlet-barebone ">
                        <section class="portlet">
                            <div class="portlet-content">
                                <div class=" portlet-content-container">
                                    <div class="portlet-body">
                                        <div class="cards-container">
                                            <div class="container-header mobile-collapse">
                                                <h2 id="feed-title" class="title">Course Related Questions</h2>
                                            </div>
                                            <div class="container-body">
                                                <div class="dashboard-portlet">
                                                    <div class="chart-container" style="position: relative;">
                                                        <canvas id="courseChart" style="margin-top: 20px;"></canvas>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </div>
                </div>
            </div>

            <div class="flex-col-5 portlet-column portlet-column-last" id="column-5">
                <div class="portlet-dropzone portlet-column-content portlet-column-content-only" id="layout-column_column-6">
                    <div class="portlet-boundary portlet-static portlet-static-end portlet-barebone ">
                        <section class="portlet">
                            <div class="portlet-content">
                                <div class=" portlet-content-container">
                                    <div class="portlet-body">
                                        <div class="cards-container">
                                            <div class="container-header mobile-collapse">
                                                <h2 id="feed-title" class="title">Learning Related Questions</h2>
                                            </div>
                                            <div class="container-body">
                                                <div class="dashboard-portlet">
                                                    <div class="chart-container" style="position: relative; height:85%; width:auto">
                                                        <canvas id="learningChart" style="padding:10px; margin-top: 20px;"></canvas>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </div>
                </div>
            </div>

            <div class="flex-col-12 portlet-column portlet-column-last" id="" style="width: 680px;">
                <div class="portlet-dropzone portlet-column-content portlet-column-content-only" id="layout-column_column-12">
                    <div class="portlet-boundary portlet-static portlet-static-end portlet-barebone ">
                        <section class="portlet">
                            <div class="portlet-content">
                                <div class=" portlet-content-container">
                                    <div class="portlet-body">
                                        <div class="cards-container">
                                            <div class="container-header mobile-collapse">
                                                <h2 id="feed-title" class="title">Instructor Related Questions</h2>
                                            </div>
                                            <div class="container-body">
                                                <div class="dashboard-portlet">
                                                    <div class="chart-container" style="position: relative; height:85%; width:auto">
                                                        <canvas id="instrChart" style="padding:10px; margin-top: 20px;"></canvas>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </div>
                </div>
            </div>
        </div>
    </div> <div class="portlet-boundary portlet-boundary_1_WAR_samlportlet_ portlet-static portlet-static-end portlet-barebone " id="p_p_id_1_WAR_samlportlet_"> <span id="p_1_WAR_samlportlet"></span> </div> <form action="#" id="hrefFm" method="post" name="hrefFm"><span></span></form>
</section>

@section scripts {
    <script>
        var url = '@Url.Action("Score", "Reports", new { id = Model.ReportID }, "http")'
        console.log(url);

        // Grab the related Question Objects from data based off the given Question-IDs from relatedQuestions
        function analyzeDataRecieved(data, relatedQuestions, chart) {
                var data = data.data;
                var labels = [];
                data.map(function (report) {
                    labels.push(report["Question-ID"])
                })
                setCourseInfo([data[0], data[labels.indexOf(87)]]);
                setRelatedQuestions(data, labels, relatedQuestions, chart);
        }

        // Request data from the given URL
        function sendRequest(url) {
            const options = {
                method: 'GET'
            };
            fetch(url, options)
                .then((resp) => resp.json())
                .then(function (data) {
                    console.log(data.data);
                    analyzeDataRecieved(data, [1, 2, 3, 4, 5, 6, 7, 348, 350, 351, 352, 8], "courseChart"); // Course based questions
                    analyzeDataRecieved(data, [10, 11, 12, 13], "learningChart");// Learning based questions
                    analyzeDataRecieved(data, [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "instrChart"); // Instructor based questions
                    analyzeDataRecieved(data, [9], "demoChart"); // Demographics
        })
                .catch(function (error) {
                    console.log(error);
                });
        }

        // Send the url request
        sendRequest(url);


        // The Course Information
        function setCourseInfo(data) {
            var html = "";
            Object.keys(data[0]).map(function (info) {
                html += '<p>' + info + " : " + data[0][info] + "</p>";
            }
            )
            html += 'Mean Effectiveness : ' + data[1].Mean;
                $('#courseInfo #data_input').html(html);
        }

        function formatLabel(str, maxwidth) {
            var sections = [];
            var words = str.split(" ");
            var temp = "";

            words.forEach(function (item, index) {
                if (temp.length > 0) {
                    var concat = temp + ' ' + item;

                    if (concat.length > maxwidth) {
                        sections.push(temp);
                        temp = "";
                    }
                    else {
                        if (index == (words.length - 1)) {
                            sections.push(concat);
                            return;
                        }
                        else {
                            temp = concat;
                            return;
                        }
                    }
                }

                if (index == (words.length - 1)) {
                    sections.push(item);
                    return;
                }

                if (item.length < maxwidth) {
                    temp = item;
                }
                else {
                    sections.push(item);
                }

            });

            return sections;
        }

        // Analyze and categorize the given data
        function setRelatedQuestions(data, labels, keys, chart) {
            var content = []
            var questions = []
            var fullQuestions = []
            keys.map(function (key) {
                if (labels.indexOf(key) === -1) {
                    return;
                }
                mean = data[labels.indexOf(key)].Mean;
                question = data[labels.indexOf(key)]["Question Abbrev"];
                question = question.charAt(0).toUpperCase() + question.slice(1);

                fullQuestion = data[labels.indexOf(key)]["Question Text"];
                question = formatLabel(question, 32);
                content.push(mean);
                questions.push(question);
                fullQuestions.push(fullQuestion);
            })

            if (chart == "demoChart") {
                questions = ["1-4", "5-8", "9-12", "13-16", "17-20"];
                fullQuestions = questions;
                content = [];

                var demo = data[labels.indexOf(9)]
                questions.map(function (range) {
                    content.push(demo[range]);
                })
            }
            
            console.log(content);
            console.log(questions);
            console.log(fullQuestions);

            var display, view;
            if (chart == "demoChart" || chart == "learningChart") {
                display = 'pie';
                view = false;
            }
            else {
                display = 'horizontalBar';
                view = true;
            }

            var ctx = document.getElementById(chart).getContext('2d');
            var myChart = new Chart(ctx, {
                type: display,
                data: {
                    labels: questions,
                    datasets: [{
                        backgroundColor: ["#c00", "#8e060c", "#c00", "#8e060c", "#c00", "#8e060c", "#c00", "#8e060c", "#c00", "#8e060c", "#c00", "#8e060c", "#c00", "#8e060c", "#c00", "#8e060c", "#c00", "#8e060c"],
                        data: content
                    }]
                },
                options: {

                    responsive: true,
                    maintainAspectRatio: view,
                    layout: {
                        padding: {
                            left: 20,
                            right: 10,
                            top: 0,
                            bottom: 0
                        }
                    },
                    legend: {display: !view},
                    scales: {
                        xAxes: [{
                            display: view,
                            stacked: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Average Rating'
                            }
                        }],
                        yAxes: [{
                            display: view,
                            barPercentage: 0.9,
                            categoryPercentage: 1.0,
                            stacked: true
                        }]
                    },
                    tooltips: {
                        callbacks: {
                            title: function(tooltipItem, chartData) {
                                return formatLabel(fullQuestions[tooltipItem[0].index], 32);
                            },
                            label: function (tooltipItem, chartData) {
                                return (Math.round(chartData.datasets[0].data[tooltipItem.index] * 100) / 100).toFixed(2);  
                            }
                        }
                    }
                }
            });

        }



    </script>
}


