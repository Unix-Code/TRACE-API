service: trace

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: us-east-1
  memorySize: 128
  timeout: 5
  apiName: NU-TRACE
  role: arn:aws:iam::317318443930:role/trace-dev-us-east-1-lambdaRole
  endpointType: regional
  path: /app/v1
  vpc:
    securityGroupIds:
      - sg-0c5846cb50539bb03
    subnetIds:
      - subnet-28eb7306
      - subnet-07072a4d
  environment:
    DB_USERNAME: ${opt:user}
    DB_PASSWORD: ${opt:pass}
    APP_ENVIRONMENT: prod

package:
  exclude:
    - requirements.txt
    - serverless.yml
    - README.md
    - package.json
    - package-lock.json
    - .circleci/**
    - node_modules/**

custom:
  basePath: api/v1

plugins:
  - serverless-python-requirements

functions:
  term:
    handler: api.controller.term_controller.get_terms
    events:
      - http:
          path: ${self:custom.basePath}/term
          method: get

  getterm:
    handler: api.controller.term_controller.get_term
    events:
      - http:
          path: ${self:custom.basePath}/term/{id}
          method: get
          request:
            parameters:
              paths:
                id: true

  instructor:
    handler: api.controller.instructor_controller.get_instructors
    events:
      - http:
          path: ${self:custom.basePath}/instructor
          method: get

  getinstructor:
    handler: api.controller.instructor_controller.get_instructor
    events:
      - http:
          path: ${self:custom.basePath}/instructor/{id}
          method: get
          request:
            parameters:
              paths:
                id: true

  course:
    handler: api.controller.report_controller.get_courses
    events:
      - http:
          path: ${self:custom.basePath}/course
          method: get

  getcourse:
    handler: api.controller.report_controller.get_course
    events:
      - http:
          path: ${self:custom.basePath}/course/{id}
          method: get
          request:
            parameters:
              paths:
                id: true

  getscores:
    handler: api.controller.report_controller.get_scores
    events:
      - http:
          path: ${self:custom.basePath}/course/{id}/scores
          method: get
          request:
            parameters:
              paths:
                id: true

  question:
    handler: api.controller.survey_controller.get_questions
    events:
      - http:
          path: ${self:custom.basePath}/question
          method: get

  category:
    handler: api.controller.survey_controller.get_categories
    events:
      - http:
          path: ${self:custom.basePath}/category
          method: get

  department:
    handler: api.controller.department_controller.get_departments
    events:
      - http:
          path: ${self:custom.basePath}/department
          method: get

  getdepartment:
    handler: api.controller.department_controller.get_department
    events:
      - http:
          path: ${self:custom.basePath}/department/{id}
          method: get
          request:
            parameters:
              paths:
                id: true